---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<moviedb_api_key>&include_adult=false&language=en-US&query=Indiana%20Jones
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.8.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 18 Nov 2021 20:46:40 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 1e5c934b70471a41d2b61ae8c4abeb79.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - ch2tgW9VPriilX1ibmKv04kJn6qdNJ24JQgNpeKMiCSaBvPMoiPomw==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 18 Nov 2021 20:46:41 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<moviedb_api_key>&include_adult=false&language=en-US&page=2&query=Indiana%20Jones
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.8.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 18 Nov 2021 20:46:40 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 c55bfc9d9a95cdee8e23989feddaa4b3.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - gz5-dqppPVnA66eeMNS1RwIni5hQLqmF2heyAcGoFWNCX5vjy2uLkw==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 18 Nov 2021 20:46:41 GMT
recorded_with: VCR 6.0.0
